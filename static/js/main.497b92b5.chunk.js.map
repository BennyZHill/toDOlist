{"version":3,"sources":["components/TaskForm.js","components/Task.js","components/TaskList.js","App.js","index.js"],"names":["TaskForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","className","placeholder","onChange","name","ref","onClick","Task","tasks","completeTask","removeTask","updateTask","setEdit","map","task","index","isComplete","TaskList","setTasks","test","newTasks","updatedTasks","removedArr","filter","taskId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA4DeA,MA1Df,SAAkBC,GAChB,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAAAC,GACnBP,EAASO,EAAEC,OAAOV,QAGdW,EAAe,SAAAF,GACnBA,EAAEG,iBAEFf,EAAMgB,SAAS,CACbC,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAERC,EAAS,KAGX,OACE,sBAAMW,SAAUF,EAAcQ,UAAU,YAAxC,SACGtB,EAAME,KACL,qCACE,uBACEqB,YAAY,cACZpB,MAAOC,EACPoB,SAAUb,EACVc,KAAK,OACLC,IAAKpB,EACLgB,UAAU,oBAEZ,wBAAQK,QAASb,EAAcQ,UAAU,mBAAzC,uBAKF,qCACE,uBACEC,YAAY,aACZpB,MAAOC,EACPoB,SAAUb,EACVc,KAAK,OACLH,UAAU,aACVI,IAAKpB,IAEP,wBAAQqB,QAASb,EAAcQ,UAAU,cAAzC,4B,eCNKM,EAxCF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC/C,EAAwB/B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAFT,mBAAOD,EAAP,KAAa+B,EAAb,KAaA,OAAI/B,EAAKe,GACA,cAAC,EAAD,CAAUf,KAAMA,EAAMc,SATV,SAAAb,GACnB6B,EAAW9B,EAAKe,GAAId,GACpB8B,EAAQ,CACNhB,GAAI,KACJd,MAAO,QAQJ0B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEd,UAAWa,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBV,QAAS,kBAAMG,EAAaK,EAAKlB,KAApD,SACGkB,EAAKd,MADEc,EAAKlB,IAGf,sBAAKK,UAAU,QAAf,UACE,cAAC,IAAD,CACEK,QAAS,kBAAMI,EAAWI,EAAKlB,KAC/BK,UAAU,gBAEZ,cAAC,IAAD,CACEK,QAAS,kBAAMM,EAAQ,CAAEhB,GAAIkB,EAAKlB,GAAId,MAAOgC,EAAKd,QAClDC,UAAU,mBAZTc,OC6BIE,MAnDf,WACE,MAA0BrC,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcU,EAAd,KAoCA,OACE,qCACE,4DACA,cAAC,EAAD,CAAUvB,SArCE,SAAAmB,GACd,GAAKA,EAAKd,OAAQ,QAAQmB,KAAKL,EAAKd,MAApC,CAIA,IAAMoB,EAAQ,CAAIN,GAAJ,mBAAaN,IAE3BU,EAASE,OA+BP,cAAC,EAAD,CACEZ,MAAOA,EACPC,aAhBe,SAAAb,GACnB,IAAIyB,EAAeb,EAAMK,KAAI,SAAAC,GAI3B,OAHIA,EAAKlB,KAAOA,IACdkB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETI,EAASG,IAULX,WAvBa,SAAAd,GACjB,IAAM0B,EAAa,YAAId,GAAOe,QAAO,SAAAT,GAAI,OAAIA,EAAKlB,KAAOA,KAEzDsB,EAASI,IAqBLX,WAhCa,SAACa,EAAQC,GACrBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI5CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKb,KAAI,SAAAc,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCRxDC,MATf,WACE,OACE,qBAAK3B,UAAU,WAAf,SACE,cAAC,EAAD,OCHN4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.497b92b5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction TaskForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className='task-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Change Task'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='task-input edit'\n          />\n          <button onClick={handleSubmit} className='task-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Add a task'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='task-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='task-button'>\n            Add task\n          </button>\n        </>\n      )}\n    </form>\n  );\n}\n\nexport default TaskForm;","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport {ImBin} from 'react-icons/im';\nimport {GiAtom} from 'react-icons/gi';\n\nconst Task = ({ tasks, completeTask, removeTask, updateTask }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTask(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TaskForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return tasks.map((task, index) => (\n    <div\n      className={task.isComplete ? 'task-row complete' : 'task-row'}\n      key={index}\n    >\n      <div key={task.id} onClick={() => completeTask(task.id)}>\n        {task.text}\n      </div>\n      <div className='icons'>\n        <ImBin\n          onClick={() => removeTask(task.id)}\n          className='delete-icon'\n        />\n        <GiAtom\n          onClick={() => setEdit({ id: task.id, value: task.text })}\n          className='edit-icon'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Task;","import React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport Task from './Task';\n\nfunction TaskList() {\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = task => {\n    if (!task.text || /^\\s*$/.test(task.text)) {\n      return;\n    }\n\n    const newTasks = [task, ...tasks];\n\n    setTasks(newTasks);\n  };\n\n  const updateTask = (taskId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTasks(prev => prev.map(item => (item.id === taskId ? newValue : item)));\n  };\n\n  const removeTask = id => {\n    const removedArr = [...tasks].filter(task => task.id !== id);\n\n    setTasks(removedArr);\n  };\n\n  const completeTask = id => {\n    let updatedTasks = tasks.map(task => {\n      if (task.id === id) {\n        task.isComplete = !task.isComplete;\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <>\n      <h1>What's the Plan for Today?</h1>\n      <TaskForm onSubmit={addTask} />\n      <Task\n        tasks={tasks}\n        completeTask={completeTask}\n        removeTask={removeTask}\n        updateTask={updateTask}\n      />\n    </>\n  );\n}\n\nexport default TaskList;","import React from 'react'\nimport './App.css';\n \nimport TaskList from './components/TaskList';\n\nfunction App() {\n  return (\n    <div className='task-app'>\n      <TaskList/>\n\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}